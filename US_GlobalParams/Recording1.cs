///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace US_GlobalParams
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Recording1 recording.
    /// </summary>
    [TestModule("274f7632-e748-40cf-b613-31f86fcd689a", ModuleType.Recording, 1)]
    public partial class Recording1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the US_GlobalParamsRepository repository.
        /// </summary>
        public static US_GlobalParamsRepository repo = US_GlobalParamsRepository.Instance;

        static Recording1 instance = new Recording1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Recording1()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Recording1 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Recording1_Open_browser();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AutomatedToolsTestSite.Forms' at 18;6.", repo.AutomatedToolsTestSite.FormsInfo, new RecordItemIndex(1));
            repo.AutomatedToolsTestSite.Forms.Click("18;6");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Forms.TextInput' at 101;16.", repo.Forms.TextInputInfo, new RecordItemIndex(2));
            repo.Forms.TextInput.Click("101;16");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'hello' with focus on 'Forms.TextInput'.", repo.Forms.TextInputInfo, new RecordItemIndex(3));
            repo.Forms.TextInput.PressKeys("hello");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Forms.TextArea' at 54;21.", repo.Forms.TextAreaInfo, new RecordItemIndex(4));
            repo.Forms.TextArea.Click("54;21");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'test' with focus on 'Forms.TextArea'.", repo.Forms.TextAreaInfo, new RecordItemIndex(5));
            repo.Forms.TextArea.PressKeys("test");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Forms.Submit' at 43;17.", repo.Forms.SubmitInfo, new RecordItemIndex(6));
            repo.Forms.Submit.Click("43;17");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='tom_millichamphello') on item 'Forms.TextInputValue'.", repo.Forms.TextInputValueInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.Forms.TextInputValueInfo, "InnerText", "tom_millichamphello");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Forms.BackToForm' at 58;17.", repo.Forms.BackToFormInfo, new RecordItemIndex(8));
            repo.Forms.BackToForm.Click("58;17");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Forms.Home' at 14;7.", repo.Forms.HomeInfo, new RecordItemIndex(9));
            repo.Forms.Home.Click("14;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Application", "Closing application containing item 'AutomatedToolsTestSite'.", repo.AutomatedToolsTestSite.SelfInfo, new RecordItemIndex(10));
            Host.Current.CloseApplication(repo.AutomatedToolsTestSite.Self, new Duration(0));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", "end of test", new RecordItemIndex(11));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
